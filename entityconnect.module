<?php
/**
 * @file
 * Handles the main hooks used by entityconnect
 *
 * One will find most of the meat in the form and menu includes
 */

/*
 * implements of hook_menu()
 */
/* function entityconnect_menu() {
  return array(
    'admin/entityconnect/return/%' => array(
      'page callback' => 'entityconnect_return',
      'page arguments' => array(3),
      'access callback' => TRUE,
      'file' => 'includes/entityconnect.menu.inc'
    ),
    'admin/entityconnect/edit/%' => array(
      'page callback' => 'entityconnect_edit',
      'page arguments' => array(3),
      'access callback' => TRUE,
      'file' => 'includes/entityconnect.menu.inc'
    ),
    'admin/entityconnect/add/%' => array(
      'title' => "Choose node type to create and add",
      'page callback' => 'entityconnect_add',
      'page arguments' => array(3),
      'access callback' => TRUE,
      'file' => 'includes/entityconnect.menu.inc'
    )
  );

} */ 

/*
 * implements of hook_field_attach_form()
 */
/* function entityconnect_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
  foreach (_entityconnect_get_ref_fields() as $field_name => $field) {
    if (isset($form[$field_name])) {
      entityconnect_include_form();
      _entityconnect_field_attach_form($entity_type, $entity, $form, $form_state, $langcode, $field_name, $field);
    }
  }
} */

/*
 * entityconnect_include_form() includes the form inc file
 *
 * This can be used in #submit array before the sumbit functions which are located in the
 * inc file
 */
/* function entityconnect_include_form() {
  module_load_include("inc", "entityconnect", "includes/entityconnect.form");
} */
/*
 * implements of hook_form_node_form_alter()
 *
 * if we are adding a new node we pass of to entityconnect_add_node_form_allter
 * if we are returning to the parent node we hand off to nodequeue_return_node_form_alter
 * TODO: need to move this at somepoint so it can be with any entity
 *
 */
/* function entityconnect_form_node_form_alter(&$form, &$form_state, $form_id) {
  $child = isset($_REQUEST['child']);

  // We can get the cid two different ways
  // first we try the $_REQUEST param.  if we do not getting it from there we try
  // the arg(3) if we are on a add form.  Also if we are on an add form we know that
  // we are a child page.
  if (
       (isset($_REQUEST['build_cache_id']) && ($cid = $_REQUEST['build_cache_id']) ) ||
       ((arg(1) == 'add') && ($cid = arg(3)) && $child = TRUE)
      ) {
    $cache = cache_get($cid);
    entityconnect_include_form();
    if ($child) {
      $form_state['#entityconnect_child_form'] = $cache;
    }
    if (isset($_REQUEST['return'])) {
      unset($_REQUEST['build_cache_id']);
      entityconnect_return_node_form_alter($form, $form_state, $form_id, $cid, $cache);
    }
  }
  // If this for is a child form lets add alter for that purpose
  // Note that we are doing this here becuase when we retrun to a form it gets rebuild
  // so this will get cuaght in the rebuild
  if (isset($form_state['#entityconnect_child_form'])) {
    $cache = $form_state['#entityconnect_child_form'];
    module_load_include('inc', 'entityconnect', 'includes/entityconnect.form');
    entityconnect_child_node_form_alter($form, $form_state, $form_id, $cache->cid, $cache);
  }
} */

/*
 * _entityconnect_get_ref_fields is a helper function to retieve all node_reference_fields
 */
/* function _entityconnect_get_ref_fields() {
  $ref_fields = array();
  foreach (field_info_fields() as $id => $field) {
    if ($field['type'] == 'node_reference') {
      $ref_fields[$id] = $field;
    }
  }
  return $ref_fields;
} */


/**
* Implementation of hook_form_alter().
*/
function entityconnect_form_alter(&$form, $form_state, $form_id) {
  
  /*
   * Alter the node form to group things more intuitively
   */
  
  
  if (strpos($form_id, '_node_form') !== FALSE) {

    $fields_names = array();
    $instances = field_info_instances('node', $form['#node']->type);
    
    foreach ($instances as $instance) {
      
      $field_name = $instance['field_name'];
      $field = field_info_field($field_name);

      if ($field['type'] == 'entityreference') {
        
        $entity_reference_info = entityreference_get_selection_handler($field);
        $entity_type = $entity_reference_info->getReferencableEntities();
        
        $link = '';
        if ($entity_type == 'node') {
          /*$bundles = array_values($entity_reference_info->field['settings']['handler_settings']['target_bundles']);
          $bundle = $bundles[0];*/
          $link = l(t('Add new element'), 'node/add', array('attributes' => array('target' => '_blank')));
        }//if()
        elseif ($entity_type == 'user') {
          $link = l(t('Add new element'), 'admin/people/create', array('attributes' => array('target' => '_blank')));
        }//elseif()
        
        if ($link) {
          if ($form[$field['field_name']][$form['#node']->language]['#cardinality'] == 1) {
            $form[$field['field_name']][$form['#node']->language][0]['target_id']['#title'] .= '<span class="padl">' . $link . '</span>';
          } else {
            $form[$field['field_name']][$form['#node']->language]['#title'] .= '<span class="padl" style="float: right">' . $link . '</span>';
          }
        }//if()
      }//if()
      
    }//foreach()
    
  }//if()
  
}
